[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Mongo = Package.mongo.Mongo;\nvar DDP = Package['ddp-client'].DDP;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar _DDP;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/raix_stubfence/util.js                                               //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\n/* global _DDP:true */                                                           // 1\n                                                                                 // 2\n_DDP = Package.ddp && Package.ddp.LivedataTest;                                  // 3\n                                                                                 // 4\nif (_DDP) {                                                                      // 5\n  _DDP = _DDP.Connection && _DDP.Connection.prototype;                           // 6\n} else {                                                                         // 7\n  _DDP = Meteor.connection.__proto__; // jshint ignore:line                      // 8\n}                                                                                // 9\n                                                                                 // 10\nif (!_DDP) {                                                                     // 11\n  throw new Error('Arg! Meteor just broke raix:stubfence! Please report to @raix at github, and he will work his butt' +\n    ' off trying to fix this');                                                  // 13\n}                                                                                // 14\n                                                                                 // 15\n///////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/raix_stubfence/nostub.js                                             //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\n/* global _DDP:false */                                                          // 1\nvar inFence = 0;                                                                 // 2\n                                                                                 // 3\n_DDP.stubFence = function(names, f) {                                            // 4\n  var self = this;                                                               // 5\n                                                                                 // 6\n  if (++inFence !== 1) {                                                         // 7\n    inFence--;                                                                   // 8\n    throw new Error('stubFence cannot lock since another stubFence is running');\n  }                                                                              // 10\n                                                                                 // 11\n  // Take string or array of string                                              // 12\n  if (names === ''+names) {                                                      // 13\n    names = [names];                                                             // 14\n  }                                                                              // 15\n                                                                                 // 16\n  // Carrier for super of methods                                                // 17\n  var supers = {};                                                               // 18\n                                                                                 // 19\n  // Store supers                                                                // 20\n  _.each(names, function(name) {                                                 // 21\n                                                                                 // 22\n    // Check that the method exists                                              // 23\n    if (self._methodHandlers[name]) {                                            // 24\n      supers[name] = self._methodHandlers[name];                                 // 25\n    } else {                                                                     // 26\n      throw new Error('stubFence could not find method \"' + name + '\"');         // 27\n    }                                                                            // 28\n                                                                                 // 29\n  });                                                                            // 30\n                                                                                 // 31\n  // Check that we got any supers to stubFence                                   // 32\n  if (names.length) {                                                            // 33\n                                                                                 // 34\n    // Remove the stub                                                           // 35\n    _.each(supers, function(f, name) {                                           // 36\n      self._methodHandlers[name] = null;                                         // 37\n    });                                                                          // 38\n                                                                                 // 39\n    // Run the code                                                              // 40\n    f();                                                                         // 41\n                                                                                 // 42\n    // Insert the stub again                                                     // 43\n    _.each(supers, function(f, name) {                                           // 44\n      self._methodHandlers[name] = f;                                            // 45\n    });                                                                          // 46\n  } else {                                                                       // 47\n    throw new Error('stubFence, no methods found');                              // 48\n  }                                                                              // 49\n                                                                                 // 50\n  inFence--;                                                                     // 51\n};                                                                               // 52\n                                                                                 // 53\nMongo.Collection.prototype.stubFence = function(f) {                             // 54\n  var self = this;                                                               // 55\n                                                                                 // 56\n  // Make sure we got a collection name                                          // 57\n  if (!self._name) {                                                             // 58\n    throw new Error('Dont run stubFence on an annonymous collection');           // 59\n  }                                                                              // 60\n                                                                                 // 61\n  // Make sure we got a connection                                               // 62\n  if (self._connection) {                                                        // 63\n    // The main collection methods                                               // 64\n    var collectionMethods = [                                                    // 65\n      '/' + self._name + '/insert',                                              // 66\n      '/' + self._name + '/remove',                                              // 67\n      '/' + self._name + '/update'                                               // 68\n    ];                                                                           // 69\n                                                                                 // 70\n    // Run the connection stubFence                                              // 71\n    self._connection.stubFence(collectionMethods, f);                            // 72\n                                                                                 // 73\n  } else {                                                                       // 74\n    throw new Error('Dont run stubFence on a collection with no connection');    // 75\n  }                                                                              // 76\n};                                                                               // 77\n                                                                                 // 78\n///////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['raix:stubfence'] = {};\n\n})();\n","servePath":"/packages/raix_stubfence.js","sourceMap":{"version":3,"sources":["/packages/raix_stubfence/util.js","/packages/raix_stubfence/nostub.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sF;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sF","file":"/packages/raix_stubfence.js","sourcesContent":["/* global _DDP:true */\n\n_DDP = Package.ddp && Package.ddp.LivedataTest;\n\nif (_DDP) {\n  _DDP = _DDP.Connection && _DDP.Connection.prototype;\n} else {\n  _DDP = Meteor.connection.__proto__; // jshint ignore:line\n}\n\nif (!_DDP) {\n  throw new Error('Arg! Meteor just broke raix:stubfence! Please report to @raix at github, and he will work his butt' +\n    ' off trying to fix this');\n}\n","/* global _DDP:false */\nvar inFence = 0;\n\n_DDP.stubFence = function(names, f) {\n  var self = this;\n\n  if (++inFence !== 1) {\n    inFence--;\n    throw new Error('stubFence cannot lock since another stubFence is running');\n  }\n\n  // Take string or array of string\n  if (names === ''+names) {\n    names = [names];\n  }\n\n  // Carrier for super of methods\n  var supers = {};\n\n  // Store supers\n  _.each(names, function(name) {\n\n    // Check that the method exists\n    if (self._methodHandlers[name]) {\n      supers[name] = self._methodHandlers[name];\n    } else {\n      throw new Error('stubFence could not find method \"' + name + '\"');\n    }\n\n  });\n\n  // Check that we got any supers to stubFence\n  if (names.length) {\n\n    // Remove the stub\n    _.each(supers, function(f, name) {\n      self._methodHandlers[name] = null;\n    });\n\n    // Run the code\n    f();\n\n    // Insert the stub again\n    _.each(supers, function(f, name) {\n      self._methodHandlers[name] = f;\n    });\n  } else {\n    throw new Error('stubFence, no methods found');\n  }\n\n  inFence--;\n};\n\nMongo.Collection.prototype.stubFence = function(f) {\n  var self = this;\n\n  // Make sure we got a collection name\n  if (!self._name) {\n    throw new Error('Dont run stubFence on an annonymous collection');\n  }\n\n  // Make sure we got a connection\n  if (self._connection) {\n    // The main collection methods\n    var collectionMethods = [\n      '/' + self._name + '/insert',\n      '/' + self._name + '/remove',\n      '/' + self._name + '/update'\n    ];\n\n    // Run the connection stubFence\n    self._connection.stubFence(collectionMethods, f);\n\n  } else {\n    throw new Error('Dont run stubFence on a collection with no connection');\n  }\n};\n"]}}]